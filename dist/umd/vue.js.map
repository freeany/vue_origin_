{"version":3,"file":"vue.js","sources":["../../src/utils/index.js","../../src/observer/array.js","../../src/observer/dep.js","../../src/observer/index.js","../../src/state.js","../../src/compiler/parse-html.js","../../src/compiler/index.js","../../src/observer/watcher.js","../../src/vdom/patch.js","../../src/lifecycle.js","../../src/init.js","../../src/vdom/create-element.js","../../src/render.js","../../src/initGlobalAPI/index.js","../../src/index.js"],"sourcesContent":["export function isObject(data) {\n    return typeof data === 'object' && data !== null\n}\n\nexport function def(data, key, value) {\n    Object.defineProperty(data, key, {\n        enumerable: false,\n        configurable: false,\n        value\n    })\n}\n\nconst LIFECYCLE_HOOKS = [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'upadted',\n    'beforeDestroy',\n    'destroyed'\n]\nfunction mergeHook(parent, child) {\n    if(child) { // 新的有\n        if(parent) {  // 如果新的有老得也有\n            return parent.concat(child)\n        }else {\n            return [child] // 首次肯定都没有，所以返回一个数组过去，所以下次的parent可以用concat方法。\n        }\n    }else { // 新的没有，老得有\n        return parent\n    }\n}\nlet strats = {}\nLIFECYCLE_HOOKS.forEach(hook => {\n    strats[hook] = mergeHook\n})\n// 合并两个对象。使用Object。assign 或者 {...} 只会将后者中的相同key直接覆盖前者中的相同key。而这个是对对象中的key进行合并。不是直接覆盖。\n// 都有同样的属性,且其值为基本数据类型，以child的为主， parent的扔掉\n// 都有同样的属性,且其值为引用数据类型，将这两个对象合并，该引用数据类型中有相同的值仍然以上个条件为主。\nexport function mergeOptions(parent, child) {\n    const options = {}\n    \n    // 需要对 parent对象进行遍历\n    for(let key in parent) {\n        mergeField(key)\n    }\n    // 也需要对child进行遍历\n    for(let key in child) {\n        // 如果合并过了(上面的走完了才会走到这)， 那么就不需要合并了\n        if(!parent.hasOwnProperty(key)) {\n            mergeField(key)\n        }\n    }\n    // 默认的合并策略， 有些属性需要有特殊的合并方式，生命周期的合并\n    function mergeField(key) {\n        if(strats[key]) {\n            return options[key] = strats[key](parent[key], child[key])\n        }\n        // 如果parent和child都是引用数据类型\n        if(typeof parent[key] === 'object' && typeof child[key] === 'object') {\n            options[key] = {\n                ...parent[key],\n                ...child[key]\n            }\n            // 如果儿子没有，那么就直接将parent的值放给options。\n        } else if(child[key] == null) {\n            options[key] = parent[key]\n        }else {\n            // 如果是不是上面的情况\n            options[key] = child[key]\n        }\n    }\n    return options\n}","\n// 我要重写数组的那7个方法， push、shift、unshift、pop、reverse、sort、splice  会导致数组本身发生变化\n\nlet oldArrayMethods = Array.prototype\nexport const arrayMethods = Object.create(oldArrayMethods) \n/*\narrayMethods = {\n    constructor: ƒ Array()\n    pop: ƒ pop()\n    push: ƒ push()\n    reverse: ƒ reverse()\n    shift: ƒ shift()\n    slice: ƒ slice()\n    sort: ƒ sort()\n    splice: ƒ splice()\n    unshift: ƒ unshift()\n    ...\n}\n  当我们定义的数据是数组的时候调用这些方法会到这里来找，这么做的好处是我们掌握了调用这些方法的控制权，可以对这个对象中的方法进行重写。 而且对于其他的方法并不影响其原有逻辑。  记住：拿到了控制权就可以加入自己的逻辑\n */\n\n/* \n    我们的目的是什么？\n    是让用户 插入/修改的值也获取数据相应的效果\n    但是我们还需要调用数组原有的方法\n    我们 需要在这调用这七个方法中加入自己的逻辑处理。然后处理完毕在调用数组原有的方法\n*/\n\nconst methods = [\n    \"push\",\n    \"shift\",\n    \"unshift\",\n    \"pop\",\n    \"reverse\",\n    \"sort\",\n    \"splice\"\n]\n\nmethods.forEach(method => {\n    //  定义方法重写数组原有的方法\n    // 重新定义arrayMethods中的方法\n    arrayMethods[method] = function(...args) {\n\n        let inserted; // 当前用户插入的元素\n        switch(method) {\n            case 'push':\n            case 'unshift':\n                inserted = args\n                break\n            case 'splice':  // splice 有删除、修改、新增的功能。我们需要对新增/修改的数据进行劫持。\n                inserted = args.slice(2)\n            break\n        }\n        this.__ob__.observerArray(inserted)\n        // 调用原生方法走原来的逻辑\n        let result = Array.prototype[method].apply(this, args)\n        this.__ob__.dep.notify()\n        return result\n    }\n    \n})\n","// dep存的是watcher。dep收集依赖。\n/* \n    wathcer 和 dep的关系\n    一个watcher 对应n个dep\n    一个dep 对应多个watcher\n*/\nlet id = 0\nclass Dep {\n    constructor() {\n        this.id = id++\n        this.subs = []\n    }\n    depend() {\n        // 如果在页面中多次使用了变量，那么会存放重复的watcher， 所以需要将Dep与watcher进行相互记忆。\n        // this.subs.push(Dep.target) // 不合适\n        Dep.target.addDep(this) // 记住当前\n    }\n    addSubs(watcher) {\n        this.subs.push(watcher)\n    }\n    notify() {\n        this.subs.forEach(watcher => watcher.update())\n    }\n\n}\n\n// 一个变量可能引用了多个watcher\nlet stack = []\nexport function pushTarget(watcher) {\n    Dep.target = watcher // 将渲染watcher存放到Dep.target\n    stack.push(watcher)\n}\n\nexport function popTarget() {\n    stack.pop()\n    Dep.target = stack[stack.length-1]\n}\n\n\nexport default  Dep","// 把data中的数据 都使用Object.defineProperty 重新定义es5\n// Object.defineProperty 不能肩痛ie8 及其一下，也没有什么polyfile\nimport { isObject } from '../utils/index'\nimport { arrayMethods } from './array'\nimport { def } from '../utils/index'\nimport Dep from './dep'\nclass Observer {\n    constructor(value) {\n        this.dep = new Dep() // 这是数组专门使用的dep实例，而对象不使用这个。\n        // vue如果数据的层次过多，需要递归的去解析对象中的属性，依次增加set和get方法\n        // 对数组进行单独的监测\n        // 给value对象加上一个ob属性，记录下当前的observer对象\n        def(value, '__ob__', this)\n        if(Array.isArray(value)) {\n            // 如果是数组的话并不会对索引进行监测，因为会导致性能问题\n            // 前端开发一般很少会操作索引， 一般会操作数组的 一些方法\n\n            // 重写这个数组的原型方法\n            value.__proto__ = arrayMethods\n            // 如果数组里放的是对象我再监测\n            this.observerArray(value)\n        }else {\n            this.walk(value)\n        }\n    }\n    observerArray(value) {\n        for(let i =0;i<value.length;i++) {\n            observe(value[i]) // 劫持数组中的每一项。\n        }\n    }\n    walk(data) {\n        let keys = Object.keys(data)\n        for(let i = 0;i<keys.length;i++) {\n            let key = keys[i]\n            let value = data[key]\n            defineReactive(data, key, value)\n        }\n    }\n}\n\n/* \n    正常情况下对一个对象进行取值和赋值操作  是引擎帮我们完成的，我们什么也做不了， \n    但是对象经过defineProperty数据劫持后，我们就可以在取值和赋值的内部进行一些操作。\n*/\nfunction defineReactive(data, key, value) {\n    let dep = new Dep()\n    let childOb = observe(value) // 进行递归劫持。对深层次(两层以上)的对象进行递归查询其属性并进行数据劫持。\n    // 先明确： 如果是数组的话，这步走完就不会往下走了， 而是回到了上面的observerArray，和对象不一样，不仅对象中的属性，该对象也会被get，所以改变对象中的属性和该对象都会触发更新。但是数组不会。\n    Object.defineProperty(data, key, {\n        get() {     // 获取值时的操作\n            // 每个属性都对应着自己的wathcer\n            if(Dep.target) { // 是否经过渲染watcher\n                // 把当前wathcer 和 Dep建立一个联系\n                dep.depend() /// 意味着我要将渲染athcher存起来\n\n                // 数组的依赖收集\n                if(childOb) {\n                    childOb.dep.depend() // 收集了数组的依赖，不用担心对象的问题，对象如果有相同的依赖会被过滤掉。\n\n                    // 如果数组中还有数组, 然后去收集\n                    if(Array.isArray(value)) {\n                        dependArray(value)\n                    }\n                }\n            }\n\n            return value\n        },\n        set(newValue) { // 设置值时的操作\n            if(newValue === value) return\n            // vm._data.obj = {cc: 123}\n            // 上一行说明了，如果用户直接赋值了一个对象的话，需要对这个对象进行劫持。\n            value = newValue\n\n            dep.notify() // 使用notify进行更新。\n        }\n    })\n}\nfunction dependArray(value) {\n    for(let i =0;i<value.length;i++) {\n        let current = value[i]\n        current.__ob__ && current.__ob__.dep.depend()\n        if(Array.isArray(value[i])) {\n            dependArray(value[i])\n        }\n    }\n} \nexport function observe(data) {\n    // console.log(data)\n    if(!isObject(data))  {\n        // 抛出错误信息\n        // console.error('请返回对象')\n        return\n    }\n\n    return new Observer(data)   // 用来对数据进行监测\n}","import { observe } from './observer/index.js'\n\n// 取值时，进行代理，用户更方便\nfunction proxy(vm, source, key) {\n    Object.defineProperty(vm, key, {\n        get() {\n            return vm[source][key]\n        },\n        set(newValue) {\n            vm[source][key] = newValue\n        }\n    })\n}\nexport function initState(vm) {\n    const opts = vm.$options\n\n    // vue 的数据来源  属性，方法，数据，计算属性，watch\n    if(opts.props) {\n        initProps(vm)\n    }\n    if(opts.methods) {\n        initMethods(vm)\n    }\n    if(opts.data) {\n        initData(vm)\n    }\n    if(opts.computed) {\n        initComputed(vm)\n    }\n    if(opts.watch) {\n        initWatch(vm)\n    }\n}\n\nfunction initProps(vm) {\n\n}\n\nfunction initMethods(vm) {\n    \n}\n\nfunction initData(vm) {\n    // console.log(vm.$options.data)\n    // 数据的初始化工作\n    let data = vm.$options.data // 用户传递的data\n    data = vm._data = typeof data === 'function' ? data.call(vm) : data\n\n    // 为了让用户更好的使用，我希望可以直接vm.xxx\n    for(let key in data) {\n        proxy(vm, '_data', key)\n    }\n    // 对对象进行数据接触， 用户改变了数据， 页面需要得到通知并刷新页面\n    // 这就是mvvm模式，数据变化可以驱动视图变化\n    // Object.defineProperty()  给属性添加get和set方法\n    observe(data)\n}\n\nfunction initComputed(vm) {\n    \n}\n\nfunction initWatch(vm) {\n    \n}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // abc-aaa  // 命名空间\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // <aaa:asdads>  ?: 代表匹配不捕获\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >  也能是自闭合标签，所以 />\n\nlet root = null\nlet currentParent // 表示当前父亲是谁\nlet stack = []\nconst ELEMENT_TYPE = 1\nconst TEXT_TYPE = 3\n\nfunction createASTElement(tagName, attrs) {\n    return {\n        tag: tagName,\n        type: ELEMENT_TYPE,\n        children: [],\n        attrs,\n        parent: null\n    }\n}\n\n// 在开发中不会使用模版。会降低性能\n// 匹配到开始标签\nfunction start(tagName, attrs) {\n    // 匹配到开始标签，就创建一个ast元素。\n    // console.log('开始标签', tagName, '属性', attrs)\n    let element = createASTElement(tagName, attrs)\n    if (!root) {\n        root = element  // root做为一个引用变量，只有在root:null的时候可以被赋值\n    }\n    currentParent = element // 其他的情况直接将 当前匹配到的element 赋值给currentParent， 不会影响到root了。也就是说root只有一次机会被改变，就是root为null的时候。每匹配到一次开始标签都是一次新的开始。这个匹配到的开始标签就暂时作为了顶层元素，给其children放匹配到的各种子元素，直到遇到结束标签或开始标签，遇到了开始标签的时候就又重新给currentParent赋值了，那么匹配到结束标签是如何确定父子关系的呢？也就是说每一次匹配到开始标签都是新的开始，那么遇到结束标签就需要确定父子关系了，将该元素和该元素匹配到的所有的子元素放到该元素的父元素中，用定义的stack栈结构的数组确定父子关系\n    // 将开始标签存放到栈中。\n    stack.push(currentParent)\n}\n// 匹配到文本\nfunction chars(text) {\n    // console.log('文本是', text)\n    text = text.replace(/\\s/g, '')\n    // 匹配到文本标签, 就把text放到当前父元素的孩子中。\n    if (text) {\n        currentParent.children.push({\n            text,\n            type: TEXT_TYPE\n        })\n    }\n}\n// 匹配到结束标签\n// <div><p>  [div, p]\nfunction end(tagName) {\n    // console.log('结束标签', tagName)\n    // 将该标签从栈中移出\n    let element = stack.pop()\n    // 我要标识当前这个p是属于这个div的儿子的\n    currentParent = stack[stack.length - 1] // 先看匹配到的end标签是否有父亲。\n    // 确定树的父子关系。将该元素和该元素匹配到的所有的子元素放到该元素的父元素中\n    if (currentParent) {\n        element.parent = currentParent\n        currentParent.children.push(element)\n    }\n}\n// 算法题：怎样判断标签都被 正常闭合了，定义一个栈结构[]往里面放开始标签[div, p, span], 当匹配到结束标签，拿出栈中的最后一个进行对比，如果相同，将栈的最后一个删除，如果匹配成功，则是正常的情况，其他的则不是正常的情况， 也是用这个来形成ast语法树，形成父子关系。\nexport function parseHTML(html) {\n    // 每次调用parseHTML都会产生一颗新的树， 所以将一下变量放到函数体中。\n    root = null //  ast语法树的树根\n    stack = []\n  \n    /*\n        核心规则就是不停的拿正则去匹配template字符串，每匹配到一块就把字符串中匹配到的截取掉 \n     */\n    while (html) {\n        let textEnd = html.indexOf('<')\n        if (textEnd === 0) { // 必须是首位代表匹配到了< \n            // 如果进来了，那么这能是开始标签也可能是结束标签\n            let startTagMatch = parseStartTag() // 通过这个方法获取到匹配的结果，tagName，attrs\n            if (startTagMatch) {\n                start(startTagMatch.tagName, startTagMatch.attrs)\n                // break\n                continue // 如果开始标签匹配完毕后，继续下一次匹配\n            }\n            // 尝试匹配结束标签\n            let endTagMatch = html.match(endTag)\n            if (endTagMatch) {\n                advance(endTagMatch[0].length)\n                end(endTagMatch[1])\n                continue\n            }\n        }\n\n        // 开始标签结束之后，应该尝试再去匹配: 比如<div>xxxxx <p> ，两个标签之间的字符。\n        let text\n        if (textEnd >= 0) {\n            text = html.substring(0, textEnd)\n            advance(text.length)\n            chars(text)\n        }\n        // 截取匹配的标签\n        function advance(n) {\n            html = html.substring(n)\n        }\n        function parseStartTag() {\n            let start = html.match(startTagOpen)\n            if (start) {\n                const match = {\n                    tagName: start[1], // 匹配到第一个分组， 在这里就是这个标签名。\n                    attrs: []\n                }\n                // console.log(start)\n                advance(start[0].length) // start[0] 代表匹配到的结果\n\n\n                let end, attr;\n                // 如果开始标签中有>， 并且还能匹配到属性的话那么就开始解析属性\n                while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n                    advance(attr[0].length) // 将属性去掉\n                    match.attrs.push({\n                        name: attr[1],\n                        value: attr[3] || attr[4] || attr[5]\n                    })\n                }\n                if (end) {\n                    advance(end[0].length) // 将开始标签的> 去掉\n                    // console.log(html)\n                    return match\n                }\n\n            }\n        }\n    }\n    return root\n}","import { parseHTML } from './parse-html.js'\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n\nfunction genProps(attrs) {\n    let str = ''\n    attrs.forEach(item => {\n        // 暂时考虑这一种情况\n        const { name, value } = item\n        if (name === 'style') {\n            let obj = {}\n            value.split(';').forEach(st => {\n                let [name, value] = st.split(':')\n                obj[name] = value\n            })\n            str += `${name}:${JSON.stringify(obj)},`\n        } else {\n            str += `${name}:${JSON.stringify(value)},`\n        }\n    });\n    return `{${str.slice(0, -1)}}`\n}\n\nfunction genChildren(el) {\n    let children = el.children\n    if (children && children.length > 0) {\n        return `${children.map(c => gen(c)).join(',')}`\n    } else {\n        return false\n    }\n}\n\n// 传过来chilren []中一个个的item\nfunction gen(node) {\n    if (node.type === 1) {\n        return generate(node)\n    } else {\n        // 这里只能抄了，都是正则匹配问题\n        let text = node.text\n        let tokens = []\n        let match, index;\n        let lastIndex = defaultTagRE.lastIndex = 0\n        while (match = defaultTagRE.exec(text)) {\n            index = match.index\n            if (index > lastIndex) {\n                tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n            }\n            tokens.push(`_s(${match[1].trim()})`)\n\n            lastIndex = index + match[0] //  每次的偏移量 决定了偏移到的位置,\n        }\n\n        if (lastIndex < text.length) {\n            tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n        }\n\n        return `_v(${tokens.join('+')})`\n    }\n}\n\nfunction generate(el) {\n    let children = genChildren(el)\n    let code = `_c(\"${el.tag}\",${\n        el.attrs.length ? genProps(el.attrs) : 'undefined'}${\n        children ? `,${children}` : ''})`\n    return code\n}\n\nexport function compileToFunction(template) {\n    // 1） 解析html字符串，将html字符串 =》 ast语法树\n    let root = parseHTML(template)\n    // console.log(root)\n    /* \n        <div id=\"app\"><p>hello {{name}}</p> hello</div>\n        // 把模版变成ast， 将ast语法树变成render函数\n        _c(\"div\", {id: app}, _c(\"p\", undefined, _v('hello' + _s(name))), _v('hello'))\n    */\n    let code = generate(root)\n    // console.log(code)\n    // 所有的模板引擎实现 都需要 new Function + with ，with改变作用域\n    let renderFn = new Function(`with(this){ return ${code}}`);\n\n    // 将ast语法树变成render函数\n    return renderFn  // 下一步就是将函数执行，然后将函数中数据渲染到页面上。\n}\n\n/*\n    首先将拿到的template字符串转成 ast语法树\n */\n// template 字符串\n/*  \n<div id=\"app\">\n    <p>{{name}}</p>\n</div> \n */\n// 转换成这个样子的ast抽象语法树\nlet root1cc = {\n    tag: 'div',\n    attrs: [{\n        name: 'id', value: 'app'\n    }],\n    parent: null,\n    type: 1,\n    children: [{\n        tag: 'p',\n        attrs: [],\n        // parent: root, // error so ... comment\n        type: 1,\n        children: [{\n            text: 'hello',\n            type: 3\n        }]\n    }]\n}","import { pushTarget, popTarget } from './dep'\nlet id = 0\nexport class Watcher {\n    constructor(vm,exprOrFn,callback,options){\n        this.vm = vm\n        this.callback = callback\n        this.options = options\n\n        this.id = id++\n        this.getter = exprOrFn // 将内部传递过来的函数放到getter属性上，并不执行，是因为要做其他的逻辑\n        // 定义set集合，看wathcer里有没有放过这个dep\n        this.depsId = new Set()\n        this.deps = []\n        this.get()\n    }\n    // wathcer里不能放重复的dep， dep里不能放重复的watcher\n    addDep(dep) {\n        let id = dep.id // 拿到dep中唯一的id值。\n        if(!this.depsId.has(id)) {\n            this.depsId.add(id)\n            // 把dep对象存进去\n            this.deps.push(dep)\n            dep.addSubs(this) // 将当前的watcher存到dep中\n        }\n    }\n    get() {\n        pushTarget(this)  // 没渲染之前，把当前watcher存起来。\n        // 要做的就是数据改变，自动执行渲染watcher\n        this.getter() // 进行渲染, 渲染需要进行取值。\n        popTarget() // 渲染之后移除watcher\n\n    }\n    update() {\n        this.get()\n    }\n}","export function patch(oldVnode, vnode) {\n    // 在第一次渲染的时候oldVnode一定是一个真实的dom元素。\n    // 所以需要判断是更新还是渲染\n    const isRealElement = oldVnode.nodeType\n\n    // 如果是初渲染\n    if (isRealElement) {\n        const oldElm = oldVnode // div id=\"app\"\n        const parentElm = oldElm.parentNode // body\n\n        let el = createElm(vnode)\n        parentElm.insertBefore(el, oldElm.nextSibling) // 通过虚拟dom创建的真实dom插入到oldElm元素的后面。\n        parentElm.removeChild(oldElm)\n        // 将虚拟dom创建出的真实dom通过oldElm的父亲扔到oldElm的父亲中，然后该父亲将oldElm删除\n\n        return el\n    }\n\n    \n    // 递归创建真实节点。替换掉老的节点\n}\n\n// 根据虚拟节点创建真实的节点\nfunction createElm(vnode) {\n    let { tag, children, key, data, text } = vnode\n    // 是标签就创建标签\n    if (typeof tag === 'string') {\n        vnode.el = document.createElement(tag)\n        // 把属性更新到元素上\n        updateProperties(vnode)\n        children.forEach(c => {\n            vnode.el.appendChild(createElm(c))// 递归创建真实dom\n        })\n\n    } else { // // 如果不是标签就是文本\n        // 虚拟dom上映射着真实dom， 方便后续操作更新\n        vnode.el = document.createTextNode(text)\n    }\n    return vnode.el\n}\n\n// 将属性更新到元素上，上面那个方式只是创建结构\nfunction updateProperties(vnode) {\n    let newProps = vnode.data;\n    let el = vnode.el;\n    for (let key in newProps) {\n        if (key === 'style') {\n            for (let styleName in newProps.style) {\n                el.style[styleName] = newProps.style[styleName];\n            }\n        } else if (key === 'class') {\n            el.className = newProps.class;\n        } else {\n            el.setAttribute(key, newProps[key]);\n        }\n    }\n}","import { Watcher } from './observer/watcher'\nimport {patch} from './vdom/patch'\n\nexport function lifecycleMixin(Vue) {\n    Vue.prototype._update = function(vnode) {\n        const vm  = this;\n        vm.$el = patch(vm.$el,vnode); // 需要用虚拟节点创建出真实节点 替换掉 真实的$el\n       \n    }\n}\n\nexport function mountedComponent(vm ,el) {\n    const options = vm.$options\n\n    vm.$el = el  // 代表的是真实的dom元素\n\n    // 渲染页面之前\n    callhook(vm, 'beforeMount')\n\n    // 渲染页面的函数，渲染函数， 更新组件的函数\n    let updateComponent = () => {  // 无论渲染还是更新都会调用此方法\n        vm._update(vm._render()) // _render方法返回的是虚拟dom。_update是通过虚拟dom创建出真实的dom。\n    }\n\n    // 渲染watcher   每个组件都有一个watcher\n    new Watcher(vm, updateComponent, () => {}, true) // true代表此Watcher是渲染Watcher。 回调是通知谁，这里是渲染Watcher不需要通知谁。\n\n    // 渲染之后\n    callhook(vm, 'mounted')\n}\n\n// 发布的过程， 刚才订阅了一个个的生命周期，现在开始发布\nexport function callhook(vm, hook) {\n    const handlers = vm.$options[hook]\n    if(handlers && Array.isArray(handlers)) {\n        for(let i =0;i<handlers.length;i++) {\n            handlers[i].call(vm)\n        }\n    }\n}","import { initState } from './state'\nimport { compileToFunction } from './compiler/index.js' // 模版编译成render函数\nimport {mountedComponent, callhook} from './lifecycle' // 执行render函数挂载这个组件\n\nimport {mergeOptions} from './utils/index'\nexport function initMinix(Vue) {\n    // 初始化流程\n    Vue.prototype._init = function(options) {\n        // 数据的劫持\n        const vm = this // 在vue中使用this.$options 指代的就是用户传递的属性。\n        // vm.$options = options // 将用户传过来的 和 全局的Vue.options进行合并。\n        vm.$options = mergeOptions(vm.constructor.options, options)\n        // console.log(vm.$options)\n        callhook(vm,'beforeCreate')\n        // 初始化状态\n        initState(vm) // 这个比较重要的处理需要单独拆分出一个文件\n        callhook(vm,'created')\n\n        // 如果用户传入了el属性，需要将页面渲染出来\n        // 如果用户传入el，就要实现挂载流程。 \n        if(vm.$options.el) {\n            vm.$mount(vm.$options.el)\n        }\n    }\n\n    Vue.prototype.$mount = function(el) {\n        const vm = this\n        el = document.querySelector(el)\n        const options = vm.$options\n        // 默认会先查找有没有render函数，没有render会采用template， template也没有就用el中的内容\n        if(!options.render) {\n            // 对模版进行编译\n            let template = options.template\n            if(!template && el) {\n                template = el.outerHTML\n            }\n            const render = compileToFunction(template) // render函数返回的是虚拟dom\n            options.render = render\n            // console.log(template)\n        }\n\n        // 使用render函数， 渲染/挂载这个组件\n        mountedComponent(vm, el) \n    }\n}","/* \n    vnode和ast的区别，大概是ast只能对 语法进行描述，但是vnode可以进行处理包装，比如事件，@click=“clickHandler\"， ast只能对这种结构进行描述，但是vnode可以将事件处理好，放到真实dom上。vnode可以进行包转扩展。但ast只能固有化表示。\n*/\n\nexport function createElement(tag, data = {}, ...children) {\n    let key = data.key\n    if(key) {\n        delete data.key\n    }\n    return vnode(tag, data, key, children, undefined)\n}\n\nexport function createTextNode(text) {\n    return vnode(undefined, undefined, undefined, undefined, text)\n}\n\nfunction vnode(tag, data, key, children, text) {\n    return {\n        tag,\n        data,\n        key,\n        children,\n        text\n    }\n}","import { createElement, createTextNode } from './vdom/create-element'\nexport function renderMixin(Vue) {\n\n    // _c创建元素的虚拟节点\n    // _v 创建文本的虚拟节点\n    // _s JSON.stringify\n\n    Vue.prototype._c = function() {\n        return createElement(...arguments) // 创建元素\n    }\n\n    Vue.prototype._v = function(text) {\n        return createTextNode(text)\n    } \n\n    Vue.prototype._s = function(val) {\n        return val == null ? '' :(typeof val === 'object' ? JSON.stringify(val) : val)\n    }\n    Vue.prototype._render = function() {\n        const vm = this\n        const {render} = vm.$options\n        let vnode = render.call(vm) // 去实例上去取值\n        return vnode\n    }\n}","import { mergeOptions } from '../utils/index'\nexport function initGlobalAPI(Vue) {\n    // 整合了所有的全局相关的内容\n    Vue.options = {}\n\n    // 这个方法的作用是可以合并一些全局api， 比如生命周期，外面传入一个生命周期函数，不会覆盖内部的。而是对生命周期进行合并\n    Vue.mixins = function(mixin) {\n        // 这个this肯定指的是Vue\n        this.options = mergeOptions(this.options, mixin)\n    }\n\n    // 生命周期的合并  把所有同名的生命周期合并成一个数组 [beforeCreate, beforeCreate], 先放进去的先执行。\n    Vue.mixins({\n        a: 1,\n        created() {\n            // console.log('first created')\n        },\n        beforeCreate() {\n            // console.log('first beforeCreate')\n        },\n        mounted() {\n            // console.log('first mounted')\n        },\n    })\n\n    Vue.mixins({\n        b: 2,\n        beforeCreate() {\n            // console.log('second beforeCreate')\n        },\n        mounted() {\n            // console.log('second mounted')\n        },\n        updated() {\n            \n        },\n    })\n}","import {initMinix} from './init'\nimport { renderMixin } from './render'\nimport { lifecycleMixin } from './lifecycle'\nimport { initGlobalAPI } from './initGlobalAPI/index'\nfunction Vue(options) {\n    // 进行vue初始化\n    // console.log(options)\n    // 进行vue的初始化流程。\n    this._init(options)\n}\n// 通过引入文件的方式， 给Vue原形上添加方法\n// 将复杂的流程单独拆分到不同的文件中。流程清晰。\ninitMinix(Vue)\nrenderMixin(Vue)\nlifecycleMixin(Vue)\n\n\n\n// 初始化全局 API\ninitGlobalAPI(Vue)\n\nexport default Vue"],"names":["isObject","data","def","key","value","Object","defineProperty","enumerable","configurable","LIFECYCLE_HOOKS","mergeHook","parent","child","concat","strats","forEach","hook","mergeOptions","options","mergeField","hasOwnProperty","oldArrayMethods","Array","prototype","arrayMethods","create","methods","method","inserted","args","slice","__ob__","observerArray","result","apply","dep","notify","id","Dep","subs","target","addDep","watcher","push","update","stack","pushTarget","popTarget","pop","length","Observer","isArray","__proto__","walk","i","observe","keys","defineReactive","childOb","get","depend","dependArray","set","newValue","current","proxy","vm","source","initState","opts","$options","props","initData","computed","watch","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","root","currentParent","ELEMENT_TYPE","TEXT_TYPE","createASTElement","tagName","attrs","tag","type","children","start","element","chars","text","replace","end","parseHTML","html","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","str","item","obj","split","st","JSON","stringify","genChildren","el","map","c","gen","join","node","generate","tokens","index","lastIndex","exec","trim","code","compileToFunction","template","renderFn","Function","Watcher","exprOrFn","callback","getter","depsId","Set","deps","has","add","addSubs","patch","oldVnode","vnode","isRealElement","nodeType","oldElm","parentElm","parentNode","createElm","insertBefore","nextSibling","removeChild","document","createElement","updateProperties","appendChild","createTextNode","newProps","styleName","style","className","setAttribute","lifecycleMixin","Vue","_update","$el","mountedComponent","callhook","updateComponent","_render","handlers","initMinix","_init","constructor","$mount","querySelector","render","outerHTML","undefined","renderMixin","_c","arguments","_v","_s","val","initGlobalAPI","mixins","mixin","a","created","beforeCreate","mounted","b","updated"],"mappings":"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"}